{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_BASE_URL = 'https://backend-production-da28.up.railway.app';\nexport const fetchProfiles = createAsyncThunk('users/fetchProfiles', async page => {\n  const limit = 4;\n  const offset = (page - 1) * limit; // Calculate the correct offset based on the page number\n  const response = await axios.get(`${API_BASE_URL}/getProfiles?limit=${limit}&offset=${offset}`);\n  return response.data;\n});\nexport const sortProfiles = createAsyncThunk('users/sortProfiles', async () => {\n  const response = await axios.get(`${API_BASE_URL}/sort`);\n  return response.data;\n});\nconst userSlice = createSlice({\n  name: 'users',\n  initialState: {\n    profiles: [],\n    status: 'idle',\n    error: null,\n    currentPage: 1,\n    itemsPerPage: 4\n  },\n  reducers: {\n    setCurrentPage: (state, action) => {\n      state.currentPage = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProfiles.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchProfiles.fulfilled, (state, action) => {\n      state.status = 'succeeded';\n      state.profiles = action.payload;\n    }).addCase(fetchProfiles.rejected, (state, action) => {\n      state.status = 'failed';\n      state.error = action.error.message;\n    }).addCase(sortProfiles.fulfilled, (state, action) => {\n      state.profiles = action.payload;\n      state.currentPage = 1; // Reset to first page on sort\n    });\n  }\n});\nexport const {\n  setCurrentPage\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_BASE_URL","fetchProfiles","page","limit","offset","response","get","data","sortProfiles","userSlice","name","initialState","profiles","status","error","currentPage","itemsPerPage","reducers","setCurrentPage","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","reducer"],"sources":["/home/balakrishna/Downloads/JOB/nxtProjects/goForMeet/user-profile-app/src/features/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst API_BASE_URL = 'https://backend-production-da28.up.railway.app';\n\nexport const fetchProfiles = createAsyncThunk('users/fetchProfiles', async (page) => {\n    const limit = 4;\n    const offset = (page - 1) * limit; // Calculate the correct offset based on the page number\n    const response = await axios.get(`${API_BASE_URL}/getProfiles?limit=${limit}&offset=${offset}`);\n    return response.data;\n});\n\nexport const sortProfiles = createAsyncThunk('users/sortProfiles', async () => {\n    const response = await axios.get(`${API_BASE_URL}/sort`);\n    return response.data;\n});\n\nconst userSlice = createSlice({\n    name: 'users',\n    initialState: {\n        profiles: [],\n        status: 'idle',\n        error: null,\n        currentPage: 1,\n        itemsPerPage: 4,\n    },\n    reducers: {\n        setCurrentPage: (state, action) => {\n            state.currentPage = action.payload;\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchProfiles.pending, (state) => {\n                state.status = 'loading';\n            })\n            .addCase(fetchProfiles.fulfilled, (state, action) => {\n                state.status = 'succeeded';\n                state.profiles = action.payload;\n            })\n            .addCase(fetchProfiles.rejected, (state, action) => {\n                state.status = 'failed';\n                state.error = action.error.message;\n            })\n            .addCase(sortProfiles.fulfilled, (state, action) => {\n                state.profiles = action.payload;\n                state.currentPage = 1; // Reset to first page on sort\n            });\n    },\n});\n\nexport const { setCurrentPage } = userSlice.actions;\n\nexport default userSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,gDAAgD;AAErE,OAAO,MAAMC,aAAa,GAAGH,gBAAgB,CAAC,qBAAqB,EAAE,MAAOI,IAAI,IAAK;EACjF,MAAMC,KAAK,GAAG,CAAC;EACf,MAAMC,MAAM,GAAG,CAACF,IAAI,GAAG,CAAC,IAAIC,KAAK,CAAC,CAAC;EACnC,MAAME,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGN,YAAY,sBAAsBG,KAAK,WAAWC,MAAM,EAAE,CAAC;EAC/F,OAAOC,QAAQ,CAACE,IAAI;AACxB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGV,gBAAgB,CAAC,oBAAoB,EAAE,YAAY;EAC3E,MAAMO,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGN,YAAY,OAAO,CAAC;EACxD,OAAOK,QAAQ,CAACE,IAAI;AACxB,CAAC,CAAC;AAEF,MAAME,SAAS,GAAGZ,WAAW,CAAC;EAC1Ba,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE,IAAI;IACXC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE;EAClB,CAAC;EACDC,QAAQ,EAAE;IACNC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACJ,WAAW,GAAGK,MAAM,CAACC,OAAO;IACtC;EACJ,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACvB,aAAa,CAACwB,OAAO,EAAGN,KAAK,IAAK;MACvCA,KAAK,CAACN,MAAM,GAAG,SAAS;IAC5B,CAAC,CAAC,CACDW,OAAO,CAACvB,aAAa,CAACyB,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACN,MAAM,GAAG,WAAW;MAC1BM,KAAK,CAACP,QAAQ,GAAGQ,MAAM,CAACC,OAAO;IACnC,CAAC,CAAC,CACDG,OAAO,CAACvB,aAAa,CAAC0B,QAAQ,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACN,MAAM,GAAG,QAAQ;MACvBM,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACN,KAAK,CAACc,OAAO;IACtC,CAAC,CAAC,CACDJ,OAAO,CAAChB,YAAY,CAACkB,SAAS,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACP,QAAQ,GAAGQ,MAAM,CAACC,OAAO;MAC/BF,KAAK,CAACJ,WAAW,GAAG,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEG;AAAe,CAAC,GAAGT,SAAS,CAACoB,OAAO;AAEnD,eAAepB,SAAS,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}